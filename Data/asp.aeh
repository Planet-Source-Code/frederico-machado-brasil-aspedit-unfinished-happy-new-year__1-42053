abandon=Abandon()
addheader=AddHeader(bstrHeaderName, bstrHeaderValue)
appendtolog=AppendToLog(bstrLogEntry)
abs=Abs(number)
array=Array(arglist)
asc=Asc(string)
ascb=AscB(string)
ascw=AscW(string)
atn=Atn(number)
binaryread=BinaryRead(pvarCountToRead)
binarywrite=BinaryWrite(varInput)
cbool=CBool(expression)
cbyte=CByte(expression)
ccur=CCur(expression)
cdate=CDate(date)
cdbl=CDbl(expression)
chr=Chr(charcode)
chrb=ChrB(charcode)
chrw=ChrW(charcode)
cint=CInt(expression)
clng=CLng(expression)
clear=Clear()
cos=Cos(number)
createobject=CreateObject(class)
csng=CSng(expression)
cstr=CStr(expression)
date=Date()
dateadd=DateAdd(interval, number, date)
datediff=DateDiff(interval, date1, date2 [, firstdayofweek[, firstweekofyear]])
datepart=DatePart(interval, date[, firstdayofweek[, firstweekofyear]])
dateserial=DateSerial(year, month, day)
datevalue=DateValue(date)
day=Day(date)
erase=Erease(arraylist)
escape=Escape(string)
eval=Eval(string)
execute=Execute(string)
executeglobal=ExecuteGlobal(string)
exp=Exp(number)
filter=Filter(InputStrings, Value[, Include[, Compare]])
fix=Fix(number)
flush=Flush()
formatcurrency=FormatCurrency(Expression[, NumDigitsAfterDecimal [, IncludeLeadingDigit [, UseParensForNegativeNumbers [, GroupDigits]]]]) 
formatdatetime=FormatDateTime(Date[, NamedFormat])
formatnumber=FormatNumber(Expression[, NumDigitsAfterDecimal [, IncludeLeadingDigit [, UseParensForNegativeNumbers [, GroupDigits]]]])
formatpercent=FormatPercent(Expression[, NumDigitsAfterDecimal [, IncludeLeadingDigit [, UseParensForNegativeNumbers [, GroupDigits]]]])
getobject=GetObject([pathname] [, class])
getref=GetRef(string)
hex=Hex(number)
hour=Hour(time)
htmlencode=HTMLEncode(bstrIn)
inputbox=InputBox(prompt[, title][, default][, xpos][, ypos][, helpfile, context])
instr=InStr([start, ]string1, string2[, compare])
instrb=InStrB([start, ]string1, string2[, compare])
instrrev=InStrRev(string1, string2[, start[, compare]])
int=Int(number)
isarray=IsArray(varname)
isclientconnected=IsClientConnected()
isdate=IsDate(expression)
isempty=IsEmpty(expression)
isnull=IsNull(expression)
isnumeric=IsNumeric(expression)
isobject=IsObject(expression)
join=Join(list[, delimiter])
lbound=LBound(arrayname[, dimension])
lcase=LCase(string)
left=Left(string, length)
leftb=LeftB(string, length)
len=Len(string)
lenB=Len(string)
loadpicture=LoadPicture(picturename)
lock=Lock()
log=Log(number)
ltrim=LTrim(string)
mappath=MapPath(bstrLogicalPath)
mid=Mid(string, start[, length])
midb=MidB(string, start[, length])
minute=Minute(time)
month=Month(date)
monthname=MonthName(month[, abbreviate])
msgbox=MsgBox(prompt[, buttons][, title][, helpfile, context])
now=Now()
oct=Oct(number)
pics=Pics(bstrHeaderValue)
randomize=Randomize(number)
redirect=Redirect(bstrURL)
replace=Replace(expression, find, replacewith[, start[, count[, compare]]])
rgb=RGB(red, green, blue)
right=Right(string, length)
rightb=RightB(string, length)
rnd=Rnd[(number)]
round=Round(expression[, numdecimalplaces])
rtrim=RTrim(string)
scriptengine=ScriptEngine()
scriptenginebuildversion=ScriptEngineBuildVersion()
scriptenginemajorversion=ScriptEngineMajorVersion()
scriptengineminorversion=ScriptEngineMinorVersion()
second=Second(time)
sgn=Sgn(number)
sin=Sin(number)
space=Space(number)
split=Split(expression[, delimiter[, count[, compare]]])
sqr=Sqr(number)
strcomp=StrComp(string1, string2[, compare])
strreverse=StrReverse(string1)
string=String(number, character)
tan=Tan(number)
time=Time()
timer=Timer()
timeserial=TimeSerial(hour, minute, second)
timevalue=TimeValue(time)
trim=Trim(string)
typename=TypeName(varname)
ubound=UBound(arrayname[, dimension])
ucase=UCase(string)
unescape=Unescape(string)
unlock=UnLock()
urlencode=URLEncode(bstrIn)
urlpathencode=URLPathEncode(bstrIn)
vartype=VarType(varname)
weekday=Weekday(date, [firstdayofweek])
weekdayname=WeekdayName(weekday, abbreviate, firstdayofweek)
write=Write(varText)
year=Year(date)